[pytest]
# Output and reporting configuration
addopts =
    --verbose
    --verbosity=2
    --tb=short
    --durations=5
    --cov=readmeai
    --cov-branch
    --cov-fail-under=80
    --cov-report=term-missing:skip-covered
    --cov-report=json:tests/.reports/coverage.json
    --asyncio-mode=auto
    --numprocesses=auto

# Test discovery and organization
testpaths = tests
python_paths = src
norecursedirs = .* build dist CVS _darcs {arch} *.egg venv env virtualenv

# Marker definitions for test categorization
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks integration tests
    e2e: end-to-end tests
    unit: unit tests
    smoke: smoke tests

# Execution settings
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function
filterwarnings =
    error
    ignore::DeprecationWarning
    ignore::UserWarning
    ignore::ImportWarning

env =
    TEST_ENV=true
    PYTHONPATH=${PYTHONPATH}

# Coverage configuration
# Note: Most coverage settings need to be in .coveragerc since pytest.ini
# doesn't support coverage.py specific configurations

[coverage:report]
exclude_lines =
    pragma: no cover
    if __name__ == .__main__.:
    raise NotImplementedError

omit =
    tests/*
    **/__init__.py
    noxfile.py

precision = 2
show_missing = true
skip_empty = true
sort = cover

[coverage:run]
data_file = tests/.reports/.coverage
